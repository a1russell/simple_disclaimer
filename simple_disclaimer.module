<?php
module_load_include('inc', 'simple_disclaimer', 'includes/configuration_form');
module_load_include('inc', 'simple_disclaimer', 'includes/disclaimer_form');


/**
 * Implements hook_init().
 */
function simple_disclaimer_init() {
  // Redirect user to disclaimer page if user has not previously acknowledged it.
  // This is safe to do in hook_init() implementation because
  // even though hook_init() is not called on cached pages,
  // pages aren't cached for authenticated users. See:
  // http://drupal.org/documentation/modules/system
  global $user;
  $uid = $user->uid;
  $redirect_whitelist = "/^(?:disclaimer$|user\/logout$|user$|login$|user\/password$|login\/password$|user\/\d+\/edit$|user\/reset\/|login\/reset\/)/";
  $whitelisted = preg_match($redirect_whitelist, request_path());
  if ($user->uid != 0 && !$whitelisted && !disclaimer_user_has_ack($user->uid) && disclaimer_configured()) {
    if (!array_key_exists('simple_disclaimer_redirect_count', $_SESSION) ||
        $_SESSION['simple_disclaimer_redirect_count'] > 1) {
      $_SESSION['simple_disclaimer_redirect_count'] = 0;
    }
    ++$_SESSION['simple_disclaimer_redirect_count'];
    if ($_SESSION['simple_disclaimer_redirect_count'] < 2) {
      unset($_REQUEST['destination'], $_REQUEST['edit']['destination']);
      $alias['destination'] = drupal_get_path_alias(request_path());
      drupal_goto('disclaimer', array('query' => $alias));
    }
  }
}


/**
 * Implements hook_menu().
 */
function simple_disclaimer_menu() {
  $items['admin/config/user-interface/disclaimer'] = array(
    'title' => t('Disclaimer Configuration'),
    'description' => 'Configuration for the disclaimer module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simple_disclaimer_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['disclaimer'] = array(
    'title' => t('Disclaimer'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('disclaimer_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * Implements hook_permission().
 */
function simple_disclaimer_permission() {
  return array(
    'simple_disclaimer_exemption' => array(
      'title' => t('Exempt from disclaimer'),
      'description' => t('Not required to acknowledge disclaimer.'),
    ),
  );
}


/**
 * Implements hook_theme().
 */
function simple_disclaimer_theme($existing, $type, $theme, $path) {
  return array(
    'disclaimer_form' => array(
      'function' => 'theme_disclaimer_form',
      'render element' => 'form',
    ),
  );
}


/**
 * Custom function to determine whether user has acknowledged disclaimer.
 */
function disclaimer_user_has_ack($uid) {
  global $user;
  $ack = user_access('simple_disclaimer_exemption', $user) ||
         (is_array($user->data) &&
          array_key_exists('simple_disclaimer_ack', $user->data) &&
          (bool) $user->data['simple_disclaimer_ack']);
  return $ack;
}


/**
 * Custom function to determine whether disclaimer has been configured.
 */
function disclaimer_configured() {
  $disclaimer = variable_get('simple_disclaimer');
  return !is_null($disclaimer);
}
