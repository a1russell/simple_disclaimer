<?php
module_load_include('inc', 'simple_disclaimer', 'includes/configuration_form');
module_load_include('inc', 'simple_disclaimer', 'includes/disclaimer_form');


/**
 * Implements hook_init().
 */
function simple_disclaimer_init() {
  // Redirect user to disclaimer page if user has not previously acknowledged it.
  // This is safe to do in hook_init() implementation because
  // even though hook_init() is not called on cached pages,
  // pages aren't cached for authenticated users. See:
  // http://drupal.org/documentation/modules/system
  global $user;
  $uid = $user->uid;
  $redirect_whitelist = "/^(?:disclaimer$|user\/logout$|user$|login$|user\/password$|login\/password$|user\/\d+\/edit$|user\/reset\/|login\/reset\/)/";
  $whitelisted = preg_match($redirect_whitelist, request_path());
  if ($user->uid != 0 && !$whitelisted && !disclaimer_user_has_ack($user->uid) && disclaimer_admin() != 0) {
    if (!array_key_exists('simple_disclaimer_redirect_count', $_SESSION) ||
        $_SESSION['simple_disclaimer_redirect_count'] > 1) {
      $_SESSION['simple_disclaimer_redirect_count'] = 0;
    }
    ++$_SESSION['simple_disclaimer_redirect_count'];
    if ($_SESSION['simple_disclaimer_redirect_count'] < 2) {
      unset($_REQUEST['destination'], $_REQUEST['edit']['destination']);
      $alias['destination'] = drupal_get_path_alias(request_path());
      drupal_goto('disclaimer', array('query'=>$alias));
    }
  }
}


/**
 * Implements hook_menu().
 */
function simple_disclaimer_menu() {
  $items['admin/config/user-interface/disclaimer'] = array(
    'title' => t('Disclaimer Configuration'),
    'description' => 'Configuration for the disclaimer module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simple_disclaimer_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['disclaimer'] = array(
    'title' => t('Disclaimer'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('disclaimer_form'),
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * Implements hook_theme().
 */
function simple_disclaimer_theme($existing, $type, $theme, $path) {
  return array(
    'disclaimer_form' => array(
      'function' => 'theme_disclaimer_form',
      'render element' => 'form',
    ),
  );
}


/**
 * Custom function to determine whether user has acknowledged disclaimer.
 */
function disclaimer_user_has_ack($uid) {
  $ack_query_str = <<< 'EOD'
    SELECT ack
    FROM {disclaimer_user_status}
    WHERE uid = :uid;
EOD;
  $ack= db_query($ack_query_str, array(':uid' => $uid))->fetchField();
  return (bool) $ack;
}


/**
 * Custom function to determine whether user role is required to acknowledge disclaimer.
 */
function disclaimer_user_role_has_ack() {
  global $user;
  $user_roles = array();

  $user_role_query_str = <<< 'EOD'
    SELECT d.rid, d.role_name
    FROM {disclaimer} AS d
    WHERE d.disclaimer != ''
    ORDER BY d.rid ASC;
EOD;
  $result = db_query($user_role_query_str);

  foreach ($result as $record) {
    $user_roles[$record->rid] = $record->role_name;
  }

  $exists = '';

  // In Drupal, "authenticated user" role (id 2) is granted to all logged in users automatically.
  $user_roles = $user->roles;
  if (count($user_roles) > 1) {
    foreach ($user_roles as $rid => $role_name) {
      // Check for "authenticated user" role.
      if ($rid == 2) {
        unset($user_roles[$rid]);
      }
    }

    foreach ($user_roles as $rid => $role_name) {
      if(in_array($role_name, array_values($user_roles))) {
        $exists = 1;
      }
    }
  }

  // Check for count($user->roles) == 1
  else {
    foreach ($user_roles as $rid => $role_name) {
      if (in_array($role_name, array_values($user_roles))) {
        $exists = 1;
      }
    }
  }

  return (bool) $exists;
}



/**
 * Custom function to determine whether admin has submitted any disclaimer previuosly.
 * If count($disclaimer) is 0 then user should not be redirected to disclaimer page.
 */
function disclaimer_admin() {
  $disclaimer = array();
  $disclaimer_query_str = <<< 'EOD'
    SELECT DISTINCT d.disclaimer
    FROM {disclaimer} AS d
    WHERE d.disclaimer != '';
EOD;
  $result= db_query($disclaimer_query_str);
  foreach($result as $record) {
    $disclaimer[] = $record->disclaimer;
  }
  return count($disclaimer);
}
